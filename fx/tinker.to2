
// tinker: a place for me to scribble my experiments.

use { Vessel, MODE_STABILITYASSIST } from ksp::vessel
use { CONSOLE } from ksp::console
use { max, ceiling, round } from core::math
use { sleep, current_time } from ksp::game

use { Common } from fx::common
use { maybe_stage } from fx::stager
use { pick_t0 } from fx::launch
use { countdown, liftoff } from fx::launch

fn tick() -> Unit = {
    sleep(0.0)
}

pub fn main_flight( vessel: Vessel, target_apoapsis: float = 80000.0, heading: float = 90.0 ) -> Result<Unit, string> = {

    let common = Common(vessel)

    common.t0 = pick_t0(common)

    CONSOLE.clear()
    CONSOLE.print_line("Vessel: " + vessel.name)

    while (countdown(common)) {
        tick()
    }

    while (liftoff(common)) {
        maybe_stage(vessel)
        tick()
    }

    // pick a constant steering attitude for now.
    common.s_mgr.pitch_yaw_roll = vec3(85, 90, 0)
    CONSOLE.print_line("steering set to heading 90, pitch 85, roll 0")

    while (true) {
        sleep(1/25)
        maybe_stage(vessel)
    }
}
