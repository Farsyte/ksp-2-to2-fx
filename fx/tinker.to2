use { Vessel, MODE_AUTOPILOT, MODE_PROGRADE, MODE_STABILITYASSIST } from ksp::vessel
use { CONSOLE } from ksp::console
use { max } from core::math
use { sleep, current_time } from ksp::game

// tinker: a place for me to scribble my experiments.

pub fn main_flight( vessel: Vessel, target_apoapsis: float = 80000.0, heading: float = 90.0 ) -> Result<Unit, string> = {
    CONSOLE.clear()
    CONSOLE.print_line("Vessel: " + vessel.name)

    for (countdown in 0..10) {
        CONSOLE.print_line("T-" + (10-countdown).to_string())
        sleep(1)
    }

    // simplest possible throttle control: set throttle to full.
    let throttle_manager = vessel.set_throttle(1.0)

    vessel.staging.next()

    // simplest possible steering: use SAS to limit angular rate.
    vessel.actions.sas = true
    vessel.autopilot.mode = MODE_STABILITYASSIST

    let t0 = current_time()
    for(i in 0..40) {
        sleep(1)

        let ut = current_time()
        let met = ut - t0

        let pos = vessel.orbit.relative_position(ut)
        let vel = vessel.orbit.orbital_velocity(ut)

        CONSOLE.print_line("MET: " + met.to_string() + " pos: " + pos.to_string() + " vel: " + vel.to_string() )

    }
}
