use { CONSOLE } from ksp::console
use { current_time } from ksp::game
use { ceiling } from core::math
use { MODE_STABILITYASSIST } from ksp::vessel

use { Common } from fx::common

pub struct Launch(common: Common) {
    common: Common = common
    mode: int = 0
    mode_met: float = 0.0
}

impl Launch {
    fn pick_t0 (self) -> float = {
        const common = self.common

        // open for extension. Add conditions that the lauch
        // time must meet inside Common; add code here that
        // locates a good launch time that meets those conditions.

        current_time() + 5.0
    }

    fn countdown (self) -> bool = {
        const common = self.common
        if self.mode != 1 {
            self.mode = 1
            self.mode_met = common.met()
        }
        const t0 = common.t0
        const t = current_time()

        // open for extension.
        // display a countdown somewhere?

        return t >= t0
    }

    fn liftoff (self) -> bool = {
        const common = self.common
        if self.mode != 2 {
            self.mode = 2
            self.mode_met = common.met()
            common.t_mgr.throttle = 1.0
            common.vessel.autopilot.enabled = true
            common.vessel.autopilot.mode = MODE_STABILITYASSIST
        }
        common.met() < 10
    }
}